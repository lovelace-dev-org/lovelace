# Generated by Django 4.1 on 2024-01-22 12:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("courses", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("feedback", "0001_initial"),
    ]

    operations = [
        migrations.AddField(
            model_name="contentpage",
            name="feedback_questions",
            field=models.ManyToManyField(
                blank=True, to="feedback.contentfeedbackquestion"
            ),
        ),
        migrations.AddField(
            model_name="contentgraph",
            name="content",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.RESTRICT,
                to="courses.contentpage",
            ),
        ),
        migrations.AddField(
            model_name="contentgraph",
            name="instance",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="courses.courseinstance"
            ),
        ),
        migrations.AddField(
            model_name="contentgraph",
            name="parentnode",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="courses.contentgraph",
            ),
        ),
        migrations.AddField(
            model_name="contentgraph",
            name="responsible",
            field=models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name="codereplaceexercisereplacement",
            name="target",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="courses.codereplaceexerciseanswer",
            ),
        ),
        migrations.AddField(
            model_name="calendarreservation",
            name="calendar_date",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="courses.calendardate"
            ),
        ),
        migrations.AddField(
            model_name="calendarreservation",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="calendardate",
            name="calendar",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="courses.calendar"
            ),
        ),
        migrations.AddField(
            model_name="calendar",
            name="related_content",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="courses.contentpage",
            ),
        ),
        migrations.CreateModel(
            name="CheckboxExercise",
            fields=[],
            options={
                "verbose_name": "checkbox exercise",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("courses.contentpage",),
        ),
        migrations.CreateModel(
            name="CodeInputExercise",
            fields=[],
            options={
                "verbose_name": "code input exercise",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("courses.contentpage",),
        ),
        migrations.CreateModel(
            name="CodeReplaceExercise",
            fields=[],
            options={
                "verbose_name": "code replace exercise",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("courses.contentpage",),
        ),
        migrations.CreateModel(
            name="FileExerciseTestExpectedStderr",
            fields=[],
            options={
                "verbose_name": "expected error",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("courses.fileexercisetestexpectedoutput",),
        ),
        migrations.CreateModel(
            name="FileExerciseTestExpectedStdout",
            fields=[],
            options={
                "verbose_name": "expected output",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("courses.fileexercisetestexpectedoutput",),
        ),
        migrations.CreateModel(
            name="FileUploadExercise",
            fields=[],
            options={
                "verbose_name": "file upload exercise",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("courses.contentpage",),
        ),
        migrations.CreateModel(
            name="Lecture",
            fields=[],
            options={
                "verbose_name": "lecture page",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("courses.contentpage",),
        ),
        migrations.CreateModel(
            name="MultipleChoiceExercise",
            fields=[],
            options={
                "verbose_name": "multiple choice exercise",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("courses.contentpage",),
        ),
        migrations.CreateModel(
            name="RepeatedTemplateExercise",
            fields=[],
            options={
                "verbose_name": "repeated template exercise",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("courses.contentpage",),
        ),
        migrations.CreateModel(
            name="TextfieldExercise",
            fields=[],
            options={
                "verbose_name": "text field exercise",
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("courses.contentpage",),
        ),
        migrations.AddField(
            model_name="usertextfieldexerciseanswer",
            name="exercise",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="courses.textfieldexercise",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="usertaskcompletion",
            unique_together={("exercise", "instance", "user")},
        ),
        migrations.AddField(
            model_name="userrepeatedtemplateinstanceanswer",
            name="answer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="courses.userrepeatedtemplateexerciseanswer",
            ),
        ),
        migrations.AddField(
            model_name="userrepeatedtemplateexerciseanswer",
            name="exercise",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="courses.repeatedtemplateexercise",
            ),
        ),
        migrations.AddField(
            model_name="userrepeatedtemplateexerciseanswer",
            name="session",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="courses.repeatedtemplateexercisesession",
            ),
        ),
        migrations.AddField(
            model_name="usermultiplechoiceexerciseanswer",
            name="chosen_answer",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="courses.multiplechoiceexerciseanswer",
            ),
        ),
        migrations.AddField(
            model_name="usermultiplechoiceexerciseanswer",
            name="exercise",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="courses.multiplechoiceexercise",
            ),
        ),
        migrations.AddField(
            model_name="userfileuploadexerciseanswer",
            name="exercise",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="courses.fileuploadexercise",
            ),
        ),
        migrations.AddField(
            model_name="usercodereplaceexerciseanswer",
            name="exercise",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="courses.codereplaceexercise",
            ),
        ),
        migrations.AddField(
            model_name="usercheckboxexerciseanswer",
            name="chosen_answers",
            field=models.ManyToManyField(to="courses.checkboxexerciseanswer"),
        ),
        migrations.AddField(
            model_name="usercheckboxexerciseanswer",
            name="exercise",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="courses.checkboxexercise",
            ),
        ),
        migrations.AddField(
            model_name="textfieldexerciseanswer",
            name="exercise",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="courses.textfieldexercise",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="termtoinstancelink",
            unique_together={("instance", "term")},
        ),
        migrations.AlterUniqueTogether(
            name="term",
            unique_together={("course", "name")},
        ),
        migrations.AlterUniqueTogether(
            name="savedmessage",
            unique_together={("course", "handle")},
        ),
        migrations.AddField(
            model_name="repeatedtemplateexercisetemplate",
            name="exercise",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="courses.repeatedtemplateexercise",
            ),
        ),
        migrations.AddField(
            model_name="repeatedtemplateexercisesessioninstance",
            name="exercise",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="courses.repeatedtemplateexercise",
            ),
        ),
        migrations.AddField(
            model_name="repeatedtemplateexercisesession",
            name="exercise",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="courses.repeatedtemplateexercise",
            ),
        ),
        migrations.AddField(
            model_name="repeatedtemplateexercisebackendfile",
            name="exercise",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="courses.repeatedtemplateexercise",
            ),
        ),
        migrations.AddField(
            model_name="repeatedtemplateexercisebackendcommand",
            name="exercise",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                to="courses.repeatedtemplateexercise",
            ),
        ),
        migrations.AddField(
            model_name="multiplechoiceexerciseanswer",
            name="exercise",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="courses.multiplechoiceexercise",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="instanceincludefiletoinstancelink",
            unique_together={("instance", "include_file")},
        ),
        migrations.AlterUniqueTogether(
            name="groupinvitation",
            unique_together={("group", "user")},
        ),
        migrations.AddField(
            model_name="fileuploadexercisereturnfile",
            name="answer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="courses.userfileuploadexerciseanswer",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="fileexerciseteststage",
            unique_together={("test", "ordinal_number")},
        ),
        migrations.AddField(
            model_name="fileexercisetestincludefile",
            name="exercise",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="courses.fileuploadexercise",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="fileexercisetestcommand",
            unique_together={("stage", "ordinal_number")},
        ),
        migrations.AddField(
            model_name="fileexercisetest",
            name="exercise",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="courses.fileuploadexercise",
                verbose_name="for file exercise",
            ),
        ),
        migrations.AddField(
            model_name="fileexercisesettings",
            name="exercise",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                to="courses.fileuploadexercise",
                verbose_name="for file exercise",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="deadlineexemption",
            unique_together={("user", "contentgraph")},
        ),
        migrations.AlterUniqueTogether(
            name="coursemedialink",
            unique_together={("instance", "media", "parent")},
        ),
        migrations.AddField(
            model_name="courseinstance",
            name="frontpage",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="courses.lecture",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="courseenrollment",
            unique_together={("instance", "student")},
        ),
        migrations.AlterUniqueTogether(
            name="contentgraph",
            unique_together={("content", "instance")},
        ),
        migrations.AddField(
            model_name="codereplaceexercisereplacement",
            name="answer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="courses.usercodereplaceexerciseanswer",
            ),
        ),
        migrations.AddField(
            model_name="codereplaceexerciseanswer",
            name="exercise",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="courses.codereplaceexercise",
            ),
        ),
        migrations.AddField(
            model_name="codeinputexerciseanswer",
            name="exercise",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="courses.codeinputexercise",
            ),
        ),
        migrations.AddField(
            model_name="checkboxexerciseanswer",
            name="exercise",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="courses.checkboxexercise",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="repeatedtemplateexercisesessioninstance",
            unique_together={("session", "ordinal_number")},
        ),
    ]
